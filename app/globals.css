@import url("https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.9/dist/web/static/pretendard.min.css");
@import "tailwindcss";

:root {
  --background-gradient-start: #ffffff;
  --background-gradient-end: #b2c7d9;
  --text-color: #282166;
  --panel-bg-color: #f0f2f5;
  --panel-border-color: #e0e0e0;
  --button-hover-bg: #e9e9e9;
  --bot-message-bg: #f0f2f5;
  --user-message-bg: #dadada;
  --input-border-color: #87b4ff;
  --input-placeholder-color: #8a8a8e;
  --action-button-color: #888;
  --action-button-hover-color: #333;
  --login-button-bg: #4285f4;
  --login-button-hover-bg: #357ae8;
  --convo-item-active-bg: #dcdcdc;
  --input-bg: #fff;
  --input-border: #a0a0a0;
  --logout-button-color: #555;
  --option-button-border: #c5c5c5;
  --option-button-bg: rgba(240, 242, 245, 0.8);
  --option-button-hover-border: #aaa;
  --chat-input-bg: transparent;
  --chat-input-text-color: #333;
  --date-input-scheme: light;

  /* Addition-Colors on Publishing */
  --login-gradient: linear-gradient(90deg, #ba9bff 0%, #0e4dec 71.21%);
  --login-text-color: #282166;
}

body.dark {
  --background-gradient-start: #1a1a1a;
  --background-gradient-end: #0d1a26;
  --text-color: #e0e0e0;
  --panel-bg-color: #1e1e1e;
  --panel-border-color: #333333;
  --button-hover-bg: #3a3a3a;
  --bot-message-bg: #2c2c2c;
  --user-message-bg: #3c3c3c;
  --input-border-color: #5a8dec;
  --input-placeholder-color: #888;
  --action-button-color: #999;
  --action-button-hover-color: #eee;
  --login-button-bg: #4285f4;
  --login-button-hover-bg: #5a95f8;
  --convo-item-active-bg: #4a4a4a;
  --input-bg: var(--button-hover-bg);
  --input-border: var(--panel-border-color);
  --logout-button-color: #bbb;
  --option-button-border: var(--panel-border-color);
  --option-button-bg: rgba(255, 255, 255, 0.1);
  --option-button-hover-border: #aaa;
  --chat-input-bg: transparent;
  --chat-input-text-color: var(--text-color);
  --date-input-scheme: dark;
}

body {
  /* background: linear-gradient(to bottom, var(--background-gradient-start), var(--background-gradient-end)); */
  color: var(--text-color);
  font-size: 16px; /* 기본 폰트 크기 */
  font-family: "Pretendard", sans-serif;
  transition: font-size 0.2s ease-in-out;
}

body::before {
  content: "";
  position: fixed;
  inset: 0;
  background: url("/images/background.png") lightgray 50% / cover no-repeat;
  filter: blur(28px);
  opacity: 0.2;
  pointer-events: none;
}

body > * {
  position: relative;
  z-index: 1;
}

body::before {
  content: "";
  position: fixed;
  inset: 0;
  background: url("/images/background.png") lightgray 50% / cover no-repeat;
  filter: blur(28px);
  opacity: 0.2;
  pointer-events: none;
}

body > * {
  position: relative;
  z-index: 1;
}

body.font-small {
  font-size: 14px;
}
/* --- 👆 [여기까지] --- */

.GlassEffect {
  /* CSS 변수로 Glass Effect 파라미터 설정 */
  --glass-light-degree: 45deg; /* 0~360: 빛의 각도 */
  --glass-light-offset: 80; /* 0~100: 빛의 오프셋 거리 */
  --glass-refraction: 100; /* 0~100: 굴절 효과 */
  --glass-depth: 36; /* 0~100: 깊이감 */
  --glass-dispersion: 50; /* 0~100: 색 분산 효과 */
  --glass-frost: 28; /* 0~100: 프로스트/흐림 효과 */
  --glass-rim-width: 1.5px; /* 외곽 림(굴절선) 두께 */

  /* 기본 Glass 스타일 */
  position: relative;
  background:
    /* 방향성 미세 라이트 그라데이션 (내부 전체 과백 방지로 낮은 알파) */ linear-gradient(
      var(--glass-light-degree),
      rgba(255, 255, 255, calc(0.004 * var(--glass-refraction))),
      rgba(255, 255, 255, calc(0.0015 * var(--glass-refraction)))
    ),
    /* 기본 유리 충전색(아주 옅게) */ rgba(255, 255, 255, 0.06);
  background-clip: padding-box;

  /* 프로스트 효과 (흐림) */
  backdrop-filter: blur(calc(var(--glass-frost) * 0.5px))
    saturate(calc(100% + var(--glass-refraction) * 0.6%))
    contrast(calc(1 + var(--glass-refraction) * 0.004))
    brightness(calc(1 + var(--glass-refraction) * 0.002));
  -webkit-backdrop-filter: blur(calc(var(--glass-frost) * 0.5px))
    saturate(calc(100% + var(--glass-refraction) * 0.6%))
    contrast(calc(1 + var(--glass-refraction) * 0.004))
    brightness(calc(1 + var(--glass-refraction) * 0.002));

  /* 깊이감과 빛 효과 */
  box-shadow: 
    /* 내부 빛 반사 (기본) - 과도한 백색감 완화 */ inset
      calc(var(--glass-light-offset) * 0.5px)
      calc(var(--glass-light-offset) * 0.5px) calc(var(--glass-depth) * 0.8px)
      rgba(255, 255, 255, calc(0.0015 * var(--glass-refraction))),
    /* 방향성 내부 하이라이트 (각도 기반 림라이트) */ inset
      calc(cos(var(--glass-light-degree)) * 2px)
      calc(sin(var(--glass-light-degree)) * 2px)
      calc(var(--glass-depth) * 0.2px) rgba(255, 255, 255, 0.35),
    /* 선명한 하얀 윤곽선(내부 1px 림) */ inset 0 0 0 1px
      rgba(255, 255, 255, calc(0.3 + var(--glass-refraction) * 0.003)),
    /* 외부 그림자 (깊이) */ 0 calc(var(--glass-depth) * 0.2px)
      calc(var(--glass-depth) * 0.5px)
      rgba(0, 0, 0, calc(0.1 + var(--glass-depth) * 0.002)),
    /* 외곽 빛 번짐(글로우) - 가장자리 강조 */ 0 0
      calc(var(--glass-refraction) * 0.12px) rgba(255, 255, 255, 0.22),
    /* 빛 반사 하이라이트(방향성 스펙룰러) */
      calc(sin(var(--glass-light-degree)) * var(--glass-light-offset) * -0.2px)
      calc(cos(var(--glass-light-degree)) * var(--glass-light-offset) * -0.2px)
      calc(var(--glass-light-offset) * 0.5px)
      rgba(255, 255, 255, calc(0.003 * var(--glass-light-offset)));

  /* 테두리 효과 */
  border: 1px solid
    rgba(255, 255, 255, calc(0.1 + var(--glass-refraction) * 0.003));
  border-radius: 12px;

  /* 오버플로우 처리 */
  overflow: hidden;

  /* 부드러운 전환 효과 */
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* 분산/굴절 림 효과를 위한 가상 요소 (프리즘 + 가장자리 리프랙션) */
.GlassEffect::before {
  content: "";
  position: absolute;
  inset: 0;
  /* 가장자리에 가까울수록 밝아지는 림(굴절 라이트/쉐도우) */
  background: conic-gradient(
      from var(--glass-light-degree),
      rgba(255, 255, 255, 0.16) 0deg,
      rgba(255, 255, 255, 0) 60deg,
      rgba(0, 0, 0, 0.12) 180deg,
      rgba(255, 255, 255, 0) 300deg,
      rgba(255, 255, 255, 0.16) 360deg
    ),
    linear-gradient(
      calc(var(--glass-light-degree) + 90deg),
      transparent,
      rgba(255, 255, 255, calc(0.0005 * var(--glass-dispersion))),
      transparent,
      rgba(255, 182, 193, calc(0.0003 * var(--glass-dispersion))),
      transparent,
      rgba(173, 216, 230, calc(0.0003 * var(--glass-dispersion))),
      transparent
    );
  mix-blend-mode: screen;
  pointer-events: none;
  opacity: calc(0.25 + var(--glass-dispersion) * 0.015);
  /* 내부로 스며들지 않도록 가장자리만 남기는 마스크 */
  -webkit-mask: radial-gradient(
    circle at center,
    transparent calc(100% - var(--glass-rim-width) - 1px),
    black calc(100% - var(--glass-rim-width))
  );
  mask: radial-gradient(
    circle at center,
    transparent calc(100% - var(--glass-rim-width) - 1px),
    black calc(100% - var(--glass-rim-width))
  );
}

/* 상단 글로시 라이트 스위프 */
.GlassEffect::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 50%;
  background: linear-gradient(
    to bottom,
    rgba(255, 255, 255, calc(0.001 * var(--glass-light-offset))),
    transparent
  );
  pointer-events: none;
  border-radius: 12px 12px 0 0;
}

/* 다크모드 대응 */
body.dark .GlassEffect {
  background: linear-gradient(
    var(--glass-light-degree),
    rgba(255, 255, 255, calc(0.0035 * var(--glass-refraction))),
    rgba(255, 255, 255, calc(0.0015 * var(--glass-refraction)))
  );
  border-color: rgba(
    255,
    255,
    255,
    calc(0.05 + var(--glass-refraction) * 0.002)
  );
}

/* 사용 예시 클래스들 */
.GlassEffect-subtle {
  --glass-light-degree: 135deg;
  --glass-light-offset: 15;
  --glass-refraction: 20;
  --glass-depth: 30;
  --glass-dispersion: 5;
  --glass-frost: 15;
}

.GlassEffect-strong {
  --glass-light-degree: 45deg;
  --glass-light-offset: 40;
  --glass-refraction: 50;
  --glass-depth: 60;
  --glass-dispersion: 25;
  --glass-frost: 35;
}

.GlassEffect-colorful {
  --glass-light-degree: 270deg;
  --glass-light-offset: 30;
  --glass-refraction: 40;
  --glass-depth: 50;
  --glass-dispersion: 80;
  --glass-frost: 20;
}
